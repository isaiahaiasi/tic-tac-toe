(()=>{const e=function(){const e=new Map,t=function(t){return e.has(t)};return{publish:function(n){return t(n)?(console.warn(`Tried to publish ${n} event, but that event already exists!`),!1):(e.set(n,function(e){const t=[],n=function(e){return t.includes(e)};return{getName:function(){return e},addListener:function(r){return n(r)?(console.warn(`tried to add listener ${r} to ${e}, but it was already subscribed!`),!1):(t.push(r),!0)},removeListener:function(r){return n(r)?(console.warn(`tried to unsubscribe ${r} from ${e}, but it isn't subscribed!`),!1):(t.splice(t.indexOf(r),1),!0)},callListeners:function(...n){return t.length<1?(console.warn(`Tried to invoke ${e}, but it did not have any listeners!`),!1):(t.forEach((e=>n?e(...n):e())),!0)}}}(n)),!0)},invoke:function(n,...r){return t(n)?(e.get(n).callListeners(...r),!0):(console.warn(`Tried to invoke nonexistent event ${n}!`),!1)},subscribe:function(n,r){return t(n)?e.get(n).addListener(r):(console.warn(`Tried to subscribe ${r} from nonexistent event ${n}!`),!1)},unsubscribe:function(n,r){return t(n)?e.get(n).removeListener(r):(console.warn(`Tried to unsubscribe ${r} from nonexistent event ${n}!`),!1)},destroyEvent:function(t){return!!e.delete(t)||(console.warn(`tried to destroy nonexistent event ${t}!`),!1)},resetEvents:()=>e.clear()}}(),t=function(){let t,n,o=[];function i(){e.publish("startButtonPressed"),e.subscribe("startButtonPressed",a),c.init()}function a(i){c.clearView(),e.publish("movePlayed"),e.publish("boardUpdated"),e.publish("gameOver"),e.subscribe("boardUpdated",v),e.subscribe("gameOver",d),r.init(),u.init(),function(e){o=[],o.push(l("X","human")),"pve"===e?o.push(l("O","ai")):o.push(l("O","human")),t=0,n=0}(i)}function d(t){e.publish("restart"),e.subscribe("restart",f),s.init(t)}function f(){s.clearView(),u.clearView(),e.resetEvents(),i()}function v(r){t=(t+1)%o.length,n++,r||(n>=9?e.invoke("gameOver",null):"ai"===o[t].type&&o[t].takeTurn())}return{init:i,getCurrentPlayer:function(){return o[t]},getPlayers:function(){return o}}}(),n=function(n=[]){let r=0;function o(e,t){return n[e.x]||(n[e.x]=[]),!n[e.x][e.y]&&(n[e.x][e.y]=t,r++,!0)}function i(e){const t=[[[0,0],[1,0],[2,0]],[[0,1],[1,1],[2,1]],[[0,2],[1,2],[2,2]],[[0,0],[0,1],[0,2]],[[1,0],[1,1],[1,2]],[[2,0],[2,1],[2,2]],[[0,0],[1,1],[2,2]],[[0,2],[1,1],[2,0]]];for(const n of t)if(u(n,e))return!0;return!1}function u(e,t){for(const r of e)if(n[r[0]][r[1]]!==t)return!1;return!0}function c(n){const r=t.getCurrentPlayer();let u=!1;o(n,r)?(i(r)&&(e.invoke("gameOver",r),u=!0),e.invoke("boardUpdated",u)):"ai"===r.type&&console.warn(`ai tried to make an illegal move (${n.x},${n.y})`)}return{init:function(){n=[];for(let e=0;e<3;e++)n.push([]);e.subscribe("movePlayed",c)},trySet:o,getBoard:function(){return n},getTurnCount:function(){return r},checkWinner:i,getBoardCopy:function(){const e=[];return n.forEach((t=>e.push([...t]))),e}}},r=n(),o=function(){let e=i;function o(){const e=r.getBoard();let t;do{const e=Math.floor(3*Math.random()),n=Math.floor(3*Math.random());t=a(e,n)}while(e[t.x][t.y]);return t}function i(){const e=r.getBoardCopy(),o=n(e),i=t.getCurrentPlayer();return u(o,t.getPlayers().indexOf(i)).xy}function u(e,r,o=1){const i=[],c=t.getPlayers()[r]===t.getCurrentPlayer();let s=0;for(let t=0;t<3;t++)for(let n=0;n<3;n++)e.getBoard()[n]&&e.getBoard()[n][t]||(i.push({xy:a(n,t)}),s++);const l=9-s;return 0===i.length&&(console.error("minimax couldn't find any valid moves!"),console.log(`current turn in simulation: ${e.getTurnCount()}, depth: ${o}`)),i.some((i=>{const s=e.getBoardCopy(),a=n(s);if(a.trySet(i.xy,t.getPlayers()[r]),a.checkWinner(t.getPlayers()[r])){if(c)return i.val=10,!0;i.val=-10}else if(l>=8)i.val=0;else{const e=(r+1)%t.getPlayers().length;i.val=u(a,e,o+1).val}return!1})),i.sort(((e,t)=>c?t.val-e.val:e.val-t.val)),i[0]}return{setAI:function(t){e="hard"===t?i:o},getPosition:function(){return e()}}}(),i=function(){const e=document.querySelector("main");return{getMain:function(){return e},createFromTemplate:function(e,t){return document.querySelector(e).content.querySelector(t).cloneNode(!0)},assignButton:function(e,t,n){const r=e.querySelector(t);return r.addEventListener("click",n),r},clearView:e=>e?.remove()}}(),u=function(){let t,n=[];const o=function(t,n){const r=a(t,n),o=document.createElement("div");function i(){e.invoke("movePlayed",r)}return o.classList.add("tile"),o.addEventListener("click",i),{xy:r,node:o,clearEventListener:function(){o.removeEventListener("click",i)}}};function u(){const e=r.getBoard();n.forEach((t=>{const n=e[t.xy.x][t.xy.y];t.node.textContent=n?n.mark:""}))}function c(){n.forEach((e=>{e.clearEventListener()}))}return{init:function(){!function(){t=document.createElement("div"),t.classList.add("game-board");for(let e=0;e<3;e++)for(let t=0;t<3;t++)n.push(o(t,e));n.forEach((e=>{t.appendChild(e.node)})),i.getMain().appendChild(t)}(),e.subscribe("boardUpdated",u),e.subscribe("gameOver",c)},clearView:function(){i.clearView(t),n=[]}}}(),c=function(){let t;return{init:function(){t=i.createFromTemplate("#start-tmpl","#start-menu"),i.assignButton(t,"#btn-start-pvp",(function(){e.invoke("startButtonPressed","pvp")})),i.assignButton(t,"#btn-start-pve",(function(){e.invoke("startButtonPressed","pve")})),document.querySelector("main").appendChild(t)},clearView:()=>i.clearView(t)}}(),s=function(){let t;function n(){e.invoke("restart")}return{init:function(e){t=i.createFromTemplate("#end-tmpl","#end-menu"),e?t.querySelector("a").textContent=e.mark:t.querySelector("p").textContent="It's a tie!",i.assignButton(t,"button",n),document.querySelector("main").appendChild(t)},clearView:()=>i.clearView(t)}}(),a=function(e,t){const n={x:e,y:t};return Object.freeze(n),n},l=function(t,n){return{mark:t,type:n,takeTurn:function(){if("ai"!==n)return!1;const r=o.getPosition(t);e.invoke("movePlayed",r)}}};t.init()})();